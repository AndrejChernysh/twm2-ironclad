
using System;
using System.Collections.Generic;

namespace Ironclad.Helper
{
    static class Tuner
    {
        public static int CapitalChangeCost = 10000;
        public static int FactionReemergenceCooloffRounds = 20;
        public static int FreeUpkeepForts = 5;
        public static int CostSiegeRam = 200;
        public static int CostSiegeLadder = 100;
        public static int CostTower = 300;
        public static int StartDate = 1200;
        public static int EndDate = 1700;
        public static int MercenaryCostMultiplier = 2;
        public static int AIRecruitmentBoostPerUnitPerHomeCityPerRound = 1;
        public static int BlockadesChancePerTurn = 66;
        public static int BlockadesChancePerTurnSlave = 33;
        public static int SlaveSpawnUnitMaxSpawns = 10;
        public static int SlaveSpawnChancePerRegionAndUnit = 1;
        public static Dictionary<string, int> CivilWarChances = new Dictionary<string, int>() { { "5-10", 1 }, { "11-15", 2 }, { "16-20", 4 }, { "21-50", 8 } };
        public static Dictionary<string, int> PlayerMoneyLimits = new Dictionary<string, int>() { { "1-2", 15000 }, { "3-5", 22500 }, { "6-9", 30000 }, { "10-15", 37500 }, { "16-22", 45000 }, { "23-30", 52500 }, { "31-39", 60000 }, { "40-100", 75000 } };
        public static int CivilWarRebellionChancePerCity = 75;
        public static int AlliedAssistChanceDeclaresWarOnAllysEnemy = 50;
        public static int AlliedAssistChanceEndsAllianceWithAlly = 25;
        public static int DebtCrisisLimit1 = -5000;
        public static int DebtCrisisLimit2 = -10000;
        public static int DebtCrisisLimit3 = -15000;
        public static int DebtCrisisLimit4 = -20000;
        public static int DebtCrisisLimit5 = -25000;
        public static int SabotageFireChance = 75;
        public static int MigrationChanceLowTaxes = 5;
        public static int MigrationChanceVeryHighTaxes = 5;
        public static int MigrationChanceSiege = 10;
        public static int MigrationChanceDifficultRegion = 10;
        public static int EmergencyTaxesActivateTreasuryThreshold = -3000;
        public static int EmergencyTaxesActivateChance = 50;
        public static int EmergencyTaxesPenaltyChancePerCity = 25;
        public static int EmergencyTaxesCoolOff = 5;
        public static List<int> MigrationAmounts = new List<int>() { 100, 200, 300, 400, 500 };
        public static int InvasionAIChance = 1;
        public static int InvasionAIMinRound = 50;
        public static int RNGEChance = 10;
        public static int LoanChance = 25;
        public static int DealChance = 100;
        public static int DealMultiplier = 150;
        public static int SeabattleLootChance = 50;
        public static int SeabattleLootValueMultiplier = 142;
        public static int BattleLootChance = 75;
        public static Dictionary<string, int> BattleLootMinAmount = new Dictionary<string, int>() { { "close", 50 }, { "average", 100 }, { "clear", 200 }, { "crushing", 400 } };
        public static List<int> BattleLootMultipliers = new List<int>() { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };
        public static double BattleLootAgainstSlaveMultiplier = 0.5;
        public static int EmpireCityLimit = 25;
        public static int TreasuryRegulationPenaltyProbability = 25;
        public static Dictionary<string, int> SeabattleLootMultiplier = new Dictionary<string, int>() { { "low", 1 }, { "moderate", 2 }, { "high", 3 } };
        public static List<string> bdStage1 = new List<string>() { "Siberia" };
        public static List<string> bdStage2 = new List<string>() { "MiddleEastern", "MiddleEasternMountains", "EuropeSouthern" };
        public static List<string> bdStage3 = new List<string>() { "Arabia", "EuropeCentral", "EuropeWestern", "Sahara" };
        public static List<string> bdStage4 = new List<string>() { "EuropeNorthern", "SaharaMountains", "EuropeMountains" };
        public static int PeaceseekingChance = 25;
        public static int PeaceseekingRoundsCooloff = 20;
        public static List<int> PeaceseekingOffers = new List<int>() { 1000, 2000, 3000, 4000, 5000};
        public static int RebelsSpawnRate = 20;
        public static int PiratesSpawnRate = 9999;
        public static Dictionary<int, Single> BuildingCostMultiplier = new Dictionary<int, Single> { { 1, 1.0f }, { 2, 2.5f }, { 3, 4.0f }, { 4, 5.5f }, { 5, 7.0f }, { 6, 9.5f }, { 7, 12.5f }, { 8, 16.0f }, { 9, 20.0f }, { 10, 24.5f } };
        public static int AITreasuryMinLimit = 50;
        public static int AITreasuryMaxLimitPenaltyMinPercentage = 30;
        public static int AITreasuryMaxLimitPenaltyMaxPercentage = 70;
        public static Dictionary<string, int> AITreasuryMaxLimits = new Dictionary<string, int>() { { "0-5", 25000 }, { "6-15", 40000 }, { "16-30", 55000 }, { "31-100", 80000 } };
        public static Dictionary<string, double> AITreasuryFixedIncomePerRoundMultiplier = new Dictionary<string, double>() { { "0-1", 4.0 }, { "2-3", 3.0 }, { "4-6", 2.0 }, { "7-100", 1.0 } };
        public static int AITreasuryFixedIncomePerRoundActivateFromTurn = 100;
        public static int ConsumablesReplenishChance = 5;
        public static int ConsumablesConsumationRisk = 5;
        public static List<int> ConsumablesTradingOffers = new List<int>() { 1000, 1250, 1500, 1750, 2000, 2250, 2500, 2750, 3000, 3250, 3500, 3750, 4000, 4250, 4500, 4750, 5000, 5250, 5500, 5750, 6000, 6250, 6500, 6750, 7000, 7250, 7500, 7750, 8000, 8250, 8500, 8750, 9000, 9250, 9500, 9750, 10000};
        public static int ConsumablesStorageMax = 5; // Extreme influence on performance, max. 5 if 6 Consumables, max. 3 if 7 Consumables
        public static int ConsumablesImportAdditivesChance = 10;
        public static int ConsumablesImportMaterialsChance = 20;
        public static int ConsumablesImportClothingChance = 40;
        public static int ConsumablesImportFoodChance = 30;
        public static int ConsumablesImportPotablesChance = 50;
        public static int ConsumablesImportWorkforceChance = 20;
        public static int ConsumablesExportModerateChance = 5;
        public static int ConsumablesExportHighChance = 20;
        public static int ConsumablesStartAmountMin = 0;
        public static int ConsumablesStartAmountMax = 2;
        public static int MobilizationChanceAdditionalEmigration = 50;
        public static int MobilizationChanceAdditionalTurmoil = 50;
        public static int MobilizationAdditionalTurmoil = 10;
        public static int MobilizationFixedCost = 500;
        public static int MobilizationFixedPopulationDecrease = 300;
        public static int MobilizationFixedTurmoil = 5;
        public static List<int> AutonomiesOffersMoneyPerRound = new List<int>() { 400, 600, 800, 1000 };
        public static List<int> AutonomiesOffersRounds = new List<int>() { 5, 10, 15 };
        public static int ReligiousUnrestCooloffTurns = 6;
        public static int ReligiousUnrestThreshold = 50;
        public static int RazingDiplomacyPenaltyChance = 25;
        public static int RegionHomeFactionReligionMin = 65;
        public static int RegionHomeFactionReligionMax = 95;
        public static int InformantsChancePerRound = 75;
        public static List<int> InformantsOffers = new List<int>() { 500, 1000, 1500, 2000, 2500};
        public static int AIExpansionTurnIntervalCheck = 10;
        public static int AIExpansionChancePerTurn1Settlement = 75;
        public static int AIExpansionChancePerTurn2Settlements = 25;
        public static int CouncilConflictProbabilityPerTurnPerSettlement = 100;
        public static int CouncilConflictPercentageSeatsThreshold = 66;
        public static int CouncilCivilWarsFromTurn = 0;
        public static int RaidsChanceMoney = 50;
        public static int RaidsChanceConsumables = 25;
        public static int RaidsMultiplierMin = 1;
        public static int RaidsMultiplierMax = 50;
        public static int ExcommunicationTurmoilChancePerSettlement = 50;
        public static int ExcommunicationHeresyChancePerSettlement = 50;
    }
}
